                            | #Execution begins at address 0
0x000:                      |     .pos 0
0x000: 30f40002000000000000 |     irmovq stack, %rsp
0x00a: 804800000000000000   |     call main
0x013: 00                   |     halt
                            | 
                            | #list here
0x018:                      |     .align 8
0x018:                      | list:
0x018:                      | ele1:
0x018: 0001000000000000     |     .quad    0x100
0x020: 2800000000000000     |     .quad    ele2
0x028:                      | ele2:
0x028: 3412000000000000     |     .quad    0x1234
0x030: 3800000000000000     |     .quad    ele3
0x038:                      | ele3:
0x038: 9d04000000000000     |     .quad    0x49d
0x040: 0000000000000000     |     .quad    0
                            | 
0x048:                      | main:
0x048: 30f71800000000000000 |     irmovq   list, %rdi
0x052: 805c00000000000000   |     call     sum_list
0x05b: 90                   |     ret
                            | 
                            | #long sum_list(list_ptr ls)
0x05c:                      | sum_list:
0x05c: a03f                 |     pushq    %rbx
                            | 
0x05e: 6300                 |     xorq     %rax, %rax
0x060: 707f00000000000000   |     jmp      test     
0x069:                      | loop:
0x069: 50370000000000000000 |     mrmovq   (%rdi), %rbx
0x073: 6030                 |     addq     %rbx, %rax
0x075: 50770800000000000000 |     mrmovq   8(%rdi), %rdi
0x07f:                      | test:
0x07f: 6277                 |     andq      %rdi, %rdi
0x081: 746900000000000000   |     jne      loop     
                            | 
0x08a: b03f                 |     popq     %rbx
0x08c: 90                   |     ret
                            | 
                            |     #Stack starts here and grows to lower addresses
0x200:                      |     .pos 0x200
0x200:                      | stack:
                            | 
