#Execution begins at address 0
    .pos 0
    irmovq stack, %rsp
    call main
    halt

#list 
    .align 8
list:
ele1:
    .quad    0x100
    .quad    ele2
ele2:
    .quad    0x1234
    .quad    ele3
ele3:
    .quad    0x49d
    .quad    0

main:
    irmovq   list, %rdi
    call     sum_list
    ret

#long sum_list(list_ptr ls)
sum_list:
    pushq    %rbx

    xorq     %rax, %rax
    jmp      test     
loop:
    mrmovq   (%rdi), %rbx
    addq     %rbx, %rax
    mrmovq   8(%rdi), %rdi
test:
    andq      %rdi, %rdi
    jne      loop     

    popq     %rbx
    ret

    #Stack starts here and grows to lower addresses
    .pos 0x200
stack:

